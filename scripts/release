#!/usr/bin/env bash
set -e

# Pull in the common helpers and reorient ourselves to the root of the repository.
source /source/scripts/common

# Build and package the kernel image, headers, and firmware first.
/source/scripts/ci

echo
echo "[*] Preparing publish assets for version '${VERSION}'..."

# Generate the SHA256 signatures for each tarball.
#
# We also spit this out in the release notes as some tools specifically check the notes for a Github
# release to find the checksums to verify assets after download.
pushd ${OUTPUT_DIR}/artifacts
sha256sum *.xz > SHA256SUMS
popd

ASSET_CHECKSUMS=$(cat ${OUTPUT_DIR}/artifacts/SHA256SUMS)

# Build the release notes.
rel_kernel_pkg=$(echo $LINUX_SOURCE | awk -F'=' '{print $1}')
rel_kernel_version=$(echo $LINUX_SOURCE | awk -F'=' '{print $2}')
rel_firmware_version=$(echo $LINUX_FIRMWARE | awk -F'=' '{print $2}')
cat << EOF > ${OUTPUT_DIR}/release-notes
## Details

**Kernel Version:** ${rel_kernel_version} ([package search](https://packages.ubuntu.com/search?keywords=${rel_kernel_pkg}&searchon=names))
**Firmware Version:** ${rel_firmware_version} ([package search](https://packages.ubuntu.com/search?keywords=linux-firmware&searchon=names))

## Checksums

\`\`\`text
${ASSET_CHECKSUMS}
\`\`\`
EOF

echo "Release is ready for publish! Run the following command to upload the release to Github:"
echo
echo "  gh release -R tobz/k3os-reloaded-kernel create ${VERSION} --notes-file ./dist/release-notes ./dist/artifacts/*.xz ./dist/artifacts/SHA256SUMS"
